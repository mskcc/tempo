(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{194:function(e,n,t){"use strict";t.r(n);var s=t(0),o=Object(s.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"gnomad"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gnomad","aria-hidden":"true"}},[e._v("#")]),e._v(" gnomAD")]),e._v(" "),t("p",[t("small",[e._v("As of 2019-08-16, the latest release of gnomAD is 2.1.1 from March 6, 2019.")])]),e._v(" "),t("p",[e._v("Variant-level allele counts and frequencies from gnomAD's exome and genome cohorts are used to annotate somatic and germline SNVs/indels.")]),e._v(" "),t("p",[e._v("These files were retrieved and processed as such:")]),e._v(" "),t("h2",{attrs:{id:"exomes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exomes","aria-hidden":"true"}},[e._v("#")]),e._v(" Exomes")]),e._v(" "),t("p",[e._v("The exome VCF file contains a lot of information. We prune most of this to reduce file size and only keep relevant information. Only values from the non-cancer subset of the total population are used, since this excludes the normals from TCGA.")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# Download files\nwget https://storage.googleapis.com/gnomad-public/release/2.1.1/vcf/exomes/gnomad.exomes.r2.1.1.sites.vcf.bgz\nwget https://storage.googleapis.com/gnomad-public/release/2.1.1/vcf/exomes/gnomad.exomes.r2.1.1.sites.vcf.bgz.tbi\nmv gnomad.exomes.r2.1.1.sites.vcf.bgz gnomad.exomes.r2.1.1.sites.vcf.gz\nmv gnomad.exomes.r2.1.1.sites.vcf.bgz.tbi gnomad.exomes.r2.1.1.sites.vcf.gz.tbi\n\n# Parse INFO columns to retain only relevant ones\nbcftools view --header-only gnomad.exomes.r2.1.1.sites.vcf.gz | \\\n    grep -E "non_cancer_AC|non_cancer_AF" | \\\n    grep -v -e "_male" -e "_female" \\\n    > gnomad.exomes.r2.1.1.sites.retained.info\n\npaste <(grep -oP "(?<=ID\\=)[A-Za-z_]+" gnomad.exomes.r2.1.1.sites.retained.info) \\\n      <(grep -oP "(?<=Description=\\")[A-Za-z\\(\\),\\-\\_\\ ]+" gnomad.exomes.r2.1.1.sites.retained.info) \\\n      > tmp && \\\n      mv tmp gnomad.exomes.r2.1.1.sites.retained.info\n\nCOLS=$(Rscript -e "out = paste0(\'^INFO/\', paste(read.delim(\'gnomad.exomes.r2.1.1.sites.retained.info\', header = F)[[\'V1\']], collapse = \',INFO/\')); cat(out)")\n\n# Apply this, and retain filtered sites\nbcftools annotate \\\n    --remove "$COLS" \\\n    --include \'FILTER~"PASS" | FILTER~"RF"\' \\\n    --output-type z \\\n    --output tmp.vcf.gz \\\n    gnomad.exomes.r2.1.1.sites.vcf.gz\n\ntabix --preset vcf tmp.vcf.gz\n\n# Mark filtered sites\nbcftools annotate \\\n    --annotations gnomad.exomes.r2.1.1.sites.non_cancer.vcf.gz \\\n    --include \'FILTER!="PASS"\' \\\n    --mark-sites "+gnomAD_FILTER" \\\n    -k \\\n    --output-type z \\\n    --output gnomad.exomes.r2.1.1.sites.non_cancer.vcf.gz \\\n    tmp.vcf.gz\n\ntabix --preset vcf gnomad.exomes.r2.1.1.sites.non_cancer.vcf.gz\n\n# Clean up\nrm gnomad.exomes.r2.1.1.sites.retained.info\nrm tmp.vcf.gz tmp.vcf.gz.tbi\n')])])]),t("h2",{attrs:{id:"genomes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#genomes","aria-hidden":"true"}},[e._v("#")]),e._v(" Genomes")]),e._v(" "),t("p",[e._v("For genomes, there is no non-cancer subset.")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# Download, one chromosome at the time\nfor chr in {1..22} X\ndo\n    wget https://storage.googleapis.com/gnomad-public/release/2.1.1/vcf/genomes/gnomad.genomes.r2.1.1.sites.${chr}.vcf.bgz\n    wget https://storage.googleapis.com/gnomad-public/release/2.1.1/vcf/genomes/gnomad.genomes.r2.1.1.sites.${chr}.vcf.bgz.tbi\n    mv gnomad.genomes.r2.1.1.sites.${chr}.vcf.bgz gnomad.genomes.r2.1.1.sites.${chr}.vcf.gz\n    mv gnomad.genomes.r2.1.1.sites.${chr}.vcf.bgz.tbi gnomad.genomes.r2.1.1.sites.${chr}.vcf.gz.tbi\ndone\n\n# Parse INFO columns to retain only relevant ones\nbcftools view --header-only gnomad.genomes.r2.1.1.sites.1.vcf.gz | \\\n    grep -E "AC|AF" | \\\n    grep -v -e "_male" -e "_female" -e "controls" -e "topmed" -e "neuro" -e "vep" -e "raw" -e "=popmax" -e "AC0" | \\\n    cut -f3 -d"=" | cut -f1 -d"," \\\n    > gnomad.genomes.r2.1.1.sites.retained.info\n\nCOLS=$(Rscript -e "out = paste0(\'^INFO/\', paste(read.delim(\'gnomad.genomes.r2.1.1.sites.retained.info\', header = F)[[\'V1\']], collapse = \',INFO/\')); cat(out)")\nCHR=({1..22} X)\n\n# Apply this, and retain filtered sites\nfor chr in ${CHR[@]}\ndo\n    bcftools annotate \\\n    --remove "$COLS" \\\n    --include \'FILTER~"PASS" | FILTER~"RF"\' \\\n    --output-type z \\\n    --output tmp.${chr}.vcf.gz \\\n    gnomad.genomes.r2.1.1.sites.${chr}.vcf.gz\n\n    tabix --preset vcf tmp.${chr}.vcf.gz\n\n    bcftools annotate \\\n    --annotations tmp.${chr}.vcf.gz \\\n    --include \'FILTER!="PASS"\' \\\n    --mark-sites "+gnomAD_FILTER" \\\n    -k \\\n    --output-type z \\\n    --output gnomad.genomes.r2.1.1.sites.${chr}.minimal.vcf.gz \\\n    tmp.${chr}.vcf.gz\n\n    tabix --preset vcf gnomad.genomes.r2.1.1.sites.${chr}.minimal.vcf.gz\ndone\n\n# Concatenate to one file\nbcftools concat \\\n    --output-type z \\\n    --output gnomad.genomes.r2.1.1.sites.minimal.vcf.gz \\\n    gnomad.genomes.r2.1.1.sites.{1..22}.minimal.vcf.gz \\\n    gnomad.genomes.r2.1.1.sites.X.minimal.vcf.gz\n\ntabix --preset vcf gnomad.genomes.r2.1.1.sites.minimal.vcf.gz\n\n# Clean up\nfor chr in ${CHR[@]}\ndo\n    rm gnomad.genomes.r2.1.1.sites.${chr}.minimal.vcf.gz*\n    rm tmp.${chr}.vcf.gz*\ndone\n')])])])])},[],!1,null,null,null);n.default=o.exports}}]);