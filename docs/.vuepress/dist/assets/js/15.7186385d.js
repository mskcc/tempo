(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{199:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"reference-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-resources","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference Resources")]),e._v(" "),a("p",[e._v("This and associated pages in this section provide details on the provenance and generation of all reference files used in "),a("code",[e._v("pipeline.nf")]),e._v(". Usage of these files is defined in the "),a("a",{attrs:{href:"https://github.com/mskcc/tempo/blob/master/conf/references.config",target:"_blank",rel:"noopener noreferrer"}},[e._v("references configuration file"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("All reference files described herein are in assembly GRCh37/hg19 of the human genome.")])]),e._v(" "),a("h2",{attrs:{id:"genome-assembly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genome-assembly","aria-hidden":"true"}},[e._v("#")]),e._v(" Genome Assembly")]),e._v(" "),a("p",[e._v("Part of the "),a("a",{attrs:{href:"https://software.broadinstitute.org/gatk/download/bundle",target:"_blank",rel:"noopener noreferrer"}},[e._v("GATK bundle"),a("OutboundLink")],1),e._v(", also available "),a("a",{attrs:{href:"https://console.cloud.google.com/storage/browser/gatk-legacy-bundles/b37",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(". Tempo uses the "),a("strong",[e._v("human_g1k_v37_decoy")]),e._v(" assembly of the genome.")]),e._v(" "),a("h2",{attrs:{id:"genomic-intervals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genomic-intervals","aria-hidden":"true"}},[e._v("#")]),e._v(" Genomic Intervals")]),e._v(" "),a("p",[e._v("BED files that specify the regions of the genome to consider for variant calling are specified in the "),a("router-link",{attrs:{to:"/running-the-pipeline.html#input-files"}},[e._v("input files")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"exome-capture-platforms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exome-capture-platforms","aria-hidden":"true"}},[e._v("#")]),e._v(" Exome Capture Platforms")]),e._v(" "),a("p",[e._v("For exomes, use BED file corresponding to the platform used for target capture. Currently, Tempo supports:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("AgilentExon_51MB")]),e._v(": SureSelectXT Human All Exon V4 from Agilent.")]),e._v(" "),a("li",[a("strong",[e._v("IDT_Exome")]),e._v(": xGen Exome Research Panel v1.0 from IDT.")])]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("Contact us if you are interested in support for other sequencing assays or capture kits.")])]),e._v(" "),a("p",[e._v("The bait and target files are provided by the kit manufacturer. These are used to estimate bait- and target-level coverage metrics as well as for variant calling.")]),e._v(" "),a("p",[e._v("We add 5 bp to each end of exons in the target file to make sure splice site mutations can be called:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("bedtools slop \\\n    -g b37.chrom.sizes \\\n    -i targets.bed \\\n    -r 5 \\\n    -l 5 \\\n    > targets.plus5bp.bed\n")])])]),a("h3",{attrs:{id:"callable-regions-for-genomes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#callable-regions-for-genomes","aria-hidden":"true"}},[e._v("#")]),e._v(" Callable Regions for Genomes")]),e._v(" "),a("p",[e._v('For genomes, a list of "callable" regions from GATK\'s bundle is used. This is converted from an interval list to a BED file:')]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gatk IntervalListToBed \\\n    --INPUT b37_wgs_calling_regions.v1.interval_list \\\n    --OUTPUT b37_wgs_calling_regions.v1.bed\n")])])]),a("h2",{attrs:{id:"repeatmasker-and-mappability-blacklist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeatmasker-and-mappability-blacklist","aria-hidden":"true"}},[e._v("#")]),e._v(" RepeatMasker and Mappability Blacklist")]),e._v(" "),a("p",[e._v("BED files with genomic repeat and mappability information are used to annotate the VCFs with somatic and germline SNV/indels. These data are from "),a("a",{attrs:{href:"http://www.repeatmasker.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RepeatMasker"),a("OutboundLink")],1),e._v(" and the "),a("a",{attrs:{href:"http://rohsdb.cmb.usc.edu/GBshape/ENCODE/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ENCODE consortium"),a("OutboundLink")],1),e._v(", and the files are retrieved from the "),a("a",{attrs:{href:"https://genome.ucsc.edu",target:"_blank",rel:"noopener noreferrer"}},[e._v("UCSC Genome Browser"),a("OutboundLink")],1),e._v(" and parsed as such:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/rmsk.txt.gz\ngunzip rmsk.txt.gz\ncut -f6-8,12 rmsk.txt | \\\n    grep -e \"Low_complexity\" -e \"Simple_repeat\" | \\\n    sed 's/^chr//g'> rmsk_mod.bed\nbgzip rmsk_mod.bed\ntabix --preset bed rmsk_mod.bed.gz\n\nwget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeDacMapabilityConsensusExcludable.bed.gz\ngunzip wgEncodeDacMapabilityConsensusExcludable.bed.gz\nsed -i 's/^chr//g' wgEncodeDacMapabilityConsensusExcludable.bed\nbgzip wgEncodeDacMapabilityConsensusExcludable.bed\ntabix --preset bed wgEncodeDacMapabilityConsensusExcludable.bed.gz\n")])])]),a("h2",{attrs:{id:"preferred-transcript-isoforms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preferred-transcript-isoforms","aria-hidden":"true"}},[e._v("#")]),e._v(" Preferred Transcript Isoforms")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("--custom-enst")]),e._v(" argument to vcf2maf takes a list of preferred gene transcript isoforms which mutations are mapped onto. We supply a consensus list of "),a("a",{attrs:{href:"https://github.com/mskcc/vcf2maf/tree/master/data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("isoform_overrides_at_mskcc")]),e._v(" and "),a("code",[e._v("isoform_overrides_uniprot")]),a("OutboundLink")],1),e._v(", generated as such:")]),e._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[e._v("t1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" readr"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v("read_tsv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'isoform_overrides_at_mskcc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nt2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" readr"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v("read_tsv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'isoform_overrides_uniprot'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nt2 "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[e._v("%>%")]),e._v("\n    dplyr"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("gene_name "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[e._v("%nin%")]),e._v(" t1"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("$")]),e._v("gene_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[e._v("%>%")]),e._v("\n    dplyr"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v("bind_rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[e._v("%>%")]),e._v("\n    readr"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v("write_tsv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'isoforms'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("h2",{attrs:{id:"hotspot-annotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hotspot-annotation","aria-hidden":"true"}},[e._v("#")]),e._v(" Hotspot Annotation")]),e._v(" "),a("p",[e._v("Three types of mutation hotspots are annotated in the somatic MAF. These include SNV, indel in linear space as well as SNV hotspots in 3D space. These are annotated with the "),a("a",{attrs:{href:"https://github.com/taylor-lab/annotateMaf",target:"_blank",rel:"noopener noreferrer"}},[e._v("annotateMaf package"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"oncokb-annotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oncokb-annotation","aria-hidden":"true"}},[e._v("#")]),e._v(" OncoKB Annotation")]),e._v(" "),a("p",[e._v("Functional mutation effects and predicted oncogenicity of variants, as well as level of clinical actionability are from "),a("a",{attrs:{href:"https://oncokb.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("OncoKB"),a("OutboundLink")],1),e._v(" and annotated using the "),a("a",{attrs:{href:"https://github.com/oncokb/oncokb-annotator",target:"_blank",rel:"noopener noreferrer"}},[e._v("OncoKB annotator"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"brca-exchange-annotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brca-exchange-annotation","aria-hidden":"true"}},[e._v("#")]),e._v(" BRCA Exchange Annotation")]),e._v(" "),a("p",[e._v("Annotation of germline variants in "),a("em",[e._v("BRCA1")]),e._v(" and "),a("em",[e._v("BRCA2")]),e._v(" is carried out with the "),a("a",{attrs:{href:"https://github.com/taylor-lab/annotateMaf",target:"_blank",rel:"noopener noreferrer"}},[e._v("annotateMaf package"),a("OutboundLink")],1),e._v(". This includes variant-level annotation from the ENIGMA consortium and ClinVar.")]),e._v(" "),a("h2",{attrs:{id:"structural-variant-calling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structural-variant-calling","aria-hidden":"true"}},[e._v("#")]),e._v(" Structural Variant Calling")]),e._v(" "),a("p",[e._v("Delly provides and takes as an argument a "),a("a",{attrs:{href:"https://github.com/dellytools/delly/tree/master/excludeTemplates",target:"_blank",rel:"noopener noreferrer"}},[e._v("file of regions"),a("OutboundLink")],1),e._v(" to "),a("em",[e._v("exclude")]),e._v(" from variant calling. This excludes telomeres and centromeres from auto- and allosomes as well as any other contig.")]),e._v(" "),a("p",[e._v("For Manta, subtract these regions from a bed file of the whole genome to generate a list of regions to "),a("em",[e._v("include")]),e._v(". First clean up the file provided by Delly, since it is not in "),a("code",[e._v("bed")]),e._v(" format:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('grep -Ev "chr|MT|GL00|NC|hs37d5" human.hg19.excl.tsv > human.hg19.excl.clean.bed\nbedtools subtract -a b37.bed -b human.hg19.excl.clean.bed > b37.minusDellyExclude.bed\n')])])])])},[],!1,null,null,null);t.default=s.exports}}]);