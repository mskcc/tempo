(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{188:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"genomic-intervals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genomic-intervals","aria-hidden":"true"}},[e._v("#")]),e._v(" Genomic intervals")]),e._v(" "),a("h2",{attrs:{id:"grch37"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grch37","aria-hidden":"true"}},[e._v("#")]),e._v(" GRCH37")]),e._v(" "),a("h3",{attrs:{id:"genome"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genome","aria-hidden":"true"}},[e._v("#")]),e._v(" Genome")]),e._v(" "),a("p",[e._v("Create "),a("a",{attrs:{href:"/juno/work/taylorlab/cmopipeline/mskcc-igenomes/grch37/genome/b37.bed"}},[e._v("a "),a("code",[e._v("bed")]),e._v(" of the auto- and allosomes in b37")]),e._v(" by downloading chromosome sizes and parsing the output into proper format:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("wget https://raw.githubusercontent.com/igvteam/igv/master/genomes/sizes/b37.chrom.sizes\npaste <(cut -f1 b37.chrom.sizes | head -24) \\\n      <(seq 24 | awk '{print \"0\"}') \\\n      <(cut -f2 b37.chrom.sizes | head -24) \\\n      > b37.bed\n\ncat b37.bed\n1       0       249250621\n2       0       243199373\n3       0       198022430\n4       0       191154276\n5       0       180915260\n6       0       171115067\n7       0       159138663\n8       0       146364022\n9       0       141213431\n10      0       135534747\n11      0       135006516\n12      0       133851895\n13      0       115169878\n14      0       107349540\n15      0       102531392\n16      0       90354753\n17      0       81195210\n18      0       78077248\n19      0       59128983\n20      0       63025520\n21      0       48129895\n22      0       51304566\nX       0       155270560\nY       0       59373566\n")])])]),a("p",[e._v("Generate the "),a("code",[e._v("bed")]),e._v(' file of "callable" regions as such:')]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gatk IntervalListToBed --INPUT b37_wgs_calling_regions.v1.interval_list --OUTPUT b37_wgs_calling_regions.v1.bed\n")])])]),a("h3",{attrs:{id:"exome-capture-platform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exome-capture-platform","aria-hidden":"true"}},[e._v("#")]),e._v(" Exome capture platform")]),e._v(" "),a("p",[e._v("Currently supporting:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("AgilentExon_51MB")]),e._v(": SureSelectXT Human All Exon V4 from Agilent")]),e._v(" "),a("li",[a("strong",[e._v("IDT_Exome")]),e._v(": xGen Exome Research Panel v1.0 from IDT")])]),e._v(" "),a("p",[e._v("Add 5 bp to each end of exons to make sure splice site mutations can be called:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("bedtools slop \\\n    -g b37.chrom.sizes \\\n    -i targets.bed \\\n    -r 5 \\\n    -l 5 \\\n    > targets.plus5bp.bed\n")])])]),a("h2",{attrs:{id:"grch38"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grch38","aria-hidden":"true"}},[e._v("#")]),e._v(" GRCh38")])])},[],!1,null,null,null);t.default=s.exports}}]);