(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{201:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"variant-annotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variant-annotation","aria-hidden":"true"}},[t._v("#")]),t._v(" Variant annotation")]),t._v(" "),a("h2",{attrs:{id:"grch37"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grch37","aria-hidden":"true"}},[t._v("#")]),t._v(" GRCh37")]),t._v(" "),a("h3",{attrs:{id:"snvs-and-indels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snvs-and-indels","aria-hidden":"true"}},[t._v("#")]),t._v(" SNVs and indels")]),t._v(" "),a("p",[t._v("Basic annotation of merged "),a("code",[t._v("vcf")]),t._v(" files from the individual variants callers is carried out in two steps. First, the combined "),a("code",[t._v("vcf")]),t._v(" is annotated with information from "),a("a",{attrs:{href:"http://www.repeatmasker.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RepeatMasker"),a("OutboundLink")],1),t._v(" and the "),a("a",{attrs:{href:"http://rohsdb.cmb.usc.edu/GBshape/ENCODE/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ENCODE consortium"),a("OutboundLink")],1),t._v(". These files are retrieved from the "),a("a",{attrs:{href:"https://genome.ucsc.edu",target:"_blank",rel:"noopener noreferrer"}},[t._v("UCSC genome browser"),a("OutboundLink")],1),t._v(" and parsed as such:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/rmsk.txt.gz\ngunzip rmsk.txt.gz\ncut -f6-8,12 rmsk.txt | \\\n    grep -e \"Low_complexity\" -e \"Simple_repeat\" | \\\n    sed 's/^chr//g'> rmsk_mod.bed\nbgzip rmsk_mod.bed\ntabix --preset bed rmsk_mod.bed.gz\n\nwget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/wgEncodeDacMapabilityConsensusExcludable.bed.gz\ngunzip wgEncodeDacMapabilityConsensusExcludable.bed.gz\nsed -i 's/^chr//g' wgEncodeDacMapabilityConsensusExcludable.bed\nbgzip wgEncodeDacMapabilityConsensusExcludable.bed\ntabix --preset bed wgEncodeDacMapabilityConsensusExcludable.bed.gz\n")])])]),a("p",[t._v("Subsequently, "),a("a",{attrs:{href:"https://github.com/mskcc/vcf2maf",target:"_blank",rel:"noopener noreferrer"}},[t._v("vcf2maf"),a("OutboundLink")],1),t._v(" is used to annotate functional effects of mutations as well as other metadata using "),a("a",{attrs:{href:"https://www.ensembl.org/vep",target:"_blank",rel:"noopener noreferrer"}},[t._v("VEP"),a("OutboundLink")],1),t._v(". The "),a("code",[t._v("--custom-enst")]),t._v(" argument to vcf2maf takes a list of preferred gene transcript isoforms which to map mutations onto. We supply a consensus list of "),a("a",{attrs:{href:"https://github.com/mskcc/vcf2maf/tree/master/data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("isoform_overrides_at_mskcc")]),t._v(" and "),a("code",[t._v("isoform_overrides_uniprot")]),a("OutboundLink")],1),t._v(", generated as such:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("t1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" readr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("read_tsv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isoform_overrides_at_mskcc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" readr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("read_tsv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isoform_overrides_uniprot'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt2 "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\n    dplyr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gene_name "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%nin%")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("gene_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\n    dplyr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("bind_rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\n    readr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("write_tsv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isoforms'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])},[],!1,null,null,null);e.default=s.exports}}]);